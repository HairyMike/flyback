{"code":"import MediaType from './utils/media-type';\r\nimport TapeRenderer from './tape-renderer';\r\nexport default class Tape {\r\n    constructor(req, options) {\r\n        this.new = false;\r\n        this.used = false;\r\n        this.request = {\r\n            url: req.url,\r\n            method: req.method,\r\n            headers: req.headers,\r\n            body: req.body,\r\n        };\r\n        this.options = options;\r\n        this.normalizeBody();\r\n        this.meta = {\r\n            createdAt: new Date(),\r\n            endpoint: this.options.proxyUrl,\r\n        };\r\n    }\r\n    normalizeBody() {\r\n        const mediaType = new MediaType(this.request);\r\n        if (mediaType.isJSON() && this.request.body && this.request.body.length > 0) {\r\n            this.request.body = Buffer.from(JSON.stringify(JSON.parse(this.request.body.toString()), null, 2));\r\n        }\r\n    }\r\n    clone() {\r\n        const json = new TapeRenderer(this).render();\r\n        return Tape.fromJSON(json, this.options);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            meta: this.meta,\r\n            request: this.request,\r\n            response: this.response,\r\n        };\r\n    }\r\n    static fromJSON(json, options) {\r\n        const tape = new Tape(json.request, options);\r\n        tape.meta = json.meta;\r\n        tape.response = json.reponse;\r\n        if (tape.response) {\r\n            tape.response.body = TapeRenderer.prepareBody(tape, tape.response, 'res');\r\n        }\r\n        return tape;\r\n    }\r\n}\r\n//# sourceMappingURL=tape.js.map","map":"{\"version\":3,\"file\":\"tape.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/tape.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,SAAS,MAAM,oBAAoB,CAAC;AAC3C,OAAO,YAAY,MAAM,iBAAiB,CAAC;AAU3C,MAAM,CAAC,OAAO,OAAO,IAAI;IAUvB,YAAY,GAAY,EAAE,OAAgB;QANnC,QAAG,GAAG,KAAK,CAAC;QACZ,SAAI,GAAG,KAAK,CAAC;QAMlB,IAAI,CAAC,OAAO,GAAG;YACb,GAAG,EAAE,GAAG,CAAC,GAAG;YACZ,MAAM,EAAE,GAAG,CAAC,MAAM;YAClB,OAAO,EAAE,GAAG,CAAC,OAAO;YACpB,IAAI,EAAE,GAAG,CAAC,IAAI;SACf,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG;YACV,SAAS,EAAE,IAAI,IAAI,EAAE;YACrB,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;SAChC,CAAC;IACJ,CAAC;IAED,aAAa;QACX,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE9C,IAAI,SAAS,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3E,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAClE,CAAC;SACH;IACH,CAAC;IAED,KAAK;QACH,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;QAE7C,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM;QACJ,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,IAAS,EAAE,OAAgB;QACzC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QAE7B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,YAAY,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;SAC3E;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CACF\"}"}
