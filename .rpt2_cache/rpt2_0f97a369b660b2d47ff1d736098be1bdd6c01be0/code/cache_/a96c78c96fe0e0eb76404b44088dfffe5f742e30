{"code":"import { HeadersUtil } from './utils/headers';\r\nimport MediaType from './utils/media-type';\r\nexport default class TapeRenderer {\r\n    constructor(tape) {\r\n        this.tape = tape;\r\n    }\r\n    static prepareBody(tape, reqOrRes, metaPrefix) {\r\n        if (tape.meta[`${metaPrefix}HumanReadable`]) {\r\n            const mediaType = new MediaType(reqOrRes);\r\n            const isResAnObject = typeof reqOrRes.body === 'object';\r\n            if (isResAnObject && mediaType.isJSON()) {\r\n                const json = JSON.stringify(reqOrRes.body, null, 2);\r\n                if (HeadersUtil.read(reqOrRes.headers, 'content-length')) {\r\n                    HeadersUtil.write(reqOrRes.headers, 'content-length', Buffer.byteLength(json).toString(), metaPrefix);\r\n                }\r\n                return Buffer.from(json);\r\n            }\r\n            else {\r\n                return Buffer.from(reqOrRes.body ? reqOrRes.body.toString() : '');\r\n            }\r\n        }\r\n        else {\r\n            return Buffer.from(reqOrRes.body ? reqOrRes.body.toString() : '', 'base64');\r\n        }\r\n    }\r\n    render() {\r\n        const reqBody = this.bodyFor(this.tape.request, 'request');\r\n        const resBody = this.tape.response\r\n            ? this.bodyFor(this.tape.response, 'response')\r\n            : '<Response is empty>';\r\n        return {\r\n            meta: this.tape.meta,\r\n            request: Object.assign({}, this.tape.request, { body: reqBody }),\r\n            response: Object.assign({}, this.tape.response, { body: resBody }),\r\n        };\r\n    }\r\n    bodyFor(reqResObj, metaPrefix) {\r\n        const mediaType = new MediaType(reqResObj);\r\n        if (!reqResObj.body) {\r\n            return '';\r\n        }\r\n        const bodyLength = reqResObj.body.length;\r\n        if (mediaType.isHumanReadable() && bodyLength > 0) {\r\n            this.tape.meta[`${metaPrefix}HumanReadable`] = true;\r\n            const rawBody = reqResObj.body.toString('utf8');\r\n            if (mediaType.isJSON()) {\r\n                return JSON.parse(reqResObj.body.toString());\r\n            }\r\n            else {\r\n                return rawBody;\r\n            }\r\n        }\r\n        else {\r\n            return reqResObj.body.toString('base64');\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=tape-renderer.js.map","map":"{\"version\":3,\"file\":\"tape-renderer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/tape-renderer.ts\"],\"names\":[],\"mappings\":\"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\"}"}
