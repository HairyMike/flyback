{"code":"import TapeStore from './tape-store';\r\nexport default class TapeStoreManager {\r\n    constructor(options) {\r\n        this.options = options;\r\n        this.tapeStores = [];\r\n        if (this.options.tapesPath) {\r\n            this.defaultTapeStore = new TapeStore(options);\r\n            this.tapeStores.push(this.defaultTapeStore);\r\n        }\r\n    }\r\n    getTapeStore(tape) {\r\n        if (tape && this.options.tapePathGenerator) {\r\n            const path = this.options.tapePathGenerator(tape);\r\n            if (path) {\r\n                let tapeStore = this.findTapeStore(path);\r\n                if (tapeStore) {\r\n                    return tapeStore;\r\n                }\r\n                tapeStore = new TapeStore(Object.assign({}, this.options, { tapesPath: path }));\r\n                this.tapeStores.push(tapeStore);\r\n                return tapeStore;\r\n            }\r\n        }\r\n        if (this.defaultTapeStore) {\r\n            return this.defaultTapeStore;\r\n        }\r\n        throw new Error('Cant find path for tape store, use options.path or options.tapePathGenerator');\r\n    }\r\n    findTapeStore(path) {\r\n        return this.tapeStores.find((tapeStore) => tapeStore.hasPath(path));\r\n    }\r\n    hasTapeBeenUsed(tapeName) {\r\n        return this.tapeStores.some((tapeStore) => tapeStore.hasTapeBeenUsed(tapeName));\r\n    }\r\n    resetTapeUsage(path) {\r\n        if (!path) {\r\n            return this.tapeStores.forEach((tapeStore) => tapeStore.resetTapeUsage());\r\n        }\r\n        const store = this.findTapeStore(path);\r\n        if (store) {\r\n            return store.resetTapeUsage();\r\n        }\r\n        return false;\r\n    }\r\n    getAllTapes() {\r\n        return this.tapeStores.reduce((tapes, tapeStore) => {\r\n            return [...tapes, ...tapeStore.tapes];\r\n        }, []);\r\n    }\r\n}\r\n//# sourceMappingURL=tape-store-manager.js.map","map":"{\"version\":3,\"file\":\"tape-store-manager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/tape-store-manager.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,SAAS,MAAM,cAAc,CAAC;AAIrC,MAAM,CAAC,OAAO,OAAO,gBAAgB;IAKnC,YAAY,OAAgB;QAC1B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC7C;IACH,CAAC;IAED,YAAY,CAAC,IAAU;QACrB,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;YAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAElD,IAAI,IAAI,EAAE;gBACR,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAEzC,IAAI,SAAS,EAAE;oBACb,OAAO,SAAS,CAAC;iBAClB;gBAED,SAAS,GAAG,IAAI,SAAS,mBACpB,IAAI,CAAC,OAAO,IACf,SAAS,EAAE,IAAI,IACf,CAAC;gBAEH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAEhC,OAAO,SAAS,CAAC;aAClB;SACF;QAED,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,OAAO,IAAI,CAAC,gBAAgB,CAAC;SAC9B;QAED,MAAM,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC;IAClG,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,eAAe,CAAC,QAAgB;QAC9B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClF,CAAC;IAED,cAAc,CAAC,IAAa;QAC1B,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,CAAC;SAC3E;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEvC,IAAI,KAAK,EAAE;YACT,OAAO,KAAK,CAAC,cAAc,EAAE,CAAC;SAC/B;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAC3B,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE;YACnB,OAAO,CAAC,GAAG,KAAK,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC,EACD,EAAY,CACb,CAAC;IACJ,CAAC;CACF\"}"}
