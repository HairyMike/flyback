{"code":"import * as tslib_1 from \"tslib\";\r\nimport fetch from 'node-fetch';\r\nimport Tape from './tape';\r\nimport { Opts } from './options';\r\nexport default class RequestHandler {\r\n    constructor(tapeStoreManager, options) {\r\n        this.tapeStoreManager = tapeStoreManager;\r\n        this.options = options;\r\n    }\r\n    handle(req) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            const recordMode = typeof this.options.record !== 'function' ? this.options.record : this.options.record(req);\r\n            Opts.validateRecord(recordMode);\r\n            const newTape = new Tape(req, this.options);\r\n            const tapeStore = this.tapeStoreManager.getTapeStore(newTape);\r\n            const matchingTape = tapeStore.find(newTape);\r\n            let resObj;\r\n            let responseTape;\r\n            if (recordMode !== 'OVERWRITE' && matchingTape) {\r\n                responseTape = matchingTape;\r\n            }\r\n            else {\r\n                if (matchingTape) {\r\n                    responseTape = matchingTape;\r\n                }\r\n                else {\r\n                    responseTape = newTape;\r\n                }\r\n                if (recordMode === 'NEW' || recordMode === 'OVERWRITE') {\r\n                    resObj = yield this.makeRealRequest(req);\r\n                    responseTape.response = Object.assign({}, resObj);\r\n                    tapeStore.save(responseTape);\r\n                }\r\n                else {\r\n                    resObj = yield this.onNoRecord(req);\r\n                    responseTape.response = Object.assign({}, resObj);\r\n                }\r\n            }\r\n            resObj = responseTape.response;\r\n            if (this.options.tapeDecorator) {\r\n                const resTape = this.options.tapeDecorator(responseTape.clone());\r\n                if (resTape.response && resTape.response.headers['content-length']) {\r\n                    resTape.response.headers['content-length'] = [resTape.response.body.length.toString()];\r\n                }\r\n                resObj = resTape.response;\r\n            }\r\n            if (!resObj) {\r\n                // TODO remove this check\r\n                throw new Error('Unable to make response');\r\n            }\r\n            return resObj;\r\n        });\r\n    }\r\n    onNoRecord(req) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            const fallbackMode = typeof this.options.fallbackMode !== 'function'\r\n                ? this.options.fallbackMode\r\n                : this.options.fallbackMode(req);\r\n            Opts.validateFallbackMode(fallbackMode);\r\n            this.options.logger.log(`Tape for ${req.url} not found and recording is disabled (fallbackMode: ${fallbackMode})`);\r\n            this.options.logger.log({\r\n                url: req.url,\r\n                headers: req.headers,\r\n            });\r\n            if (fallbackMode === 'PROXY') {\r\n                return yield this.makeRealRequest(req);\r\n            }\r\n            return {\r\n                status: 404,\r\n                headers: { 'content-type': ['text/plain'] },\r\n                body: Buffer.from('talkback - tape not found'),\r\n            };\r\n        });\r\n    }\r\n    makeRealRequest(req) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\r\n            let { body } = req;\r\n            const { method, url } = req;\r\n            const headers = Object.assign({}, req.headers);\r\n            // delete headers.host;\r\n            const endpoint = this.options.proxyUrl;\r\n            this.options.logger.log(`Making real request to ${endpoint}${url}`);\r\n            if (method === 'GET' || method === 'HEAD') {\r\n                body = undefined;\r\n            }\r\n            const agent = this.options.agent || undefined;\r\n            const fRes = yield fetch(endpoint + url, {\r\n                method,\r\n                headers,\r\n                body,\r\n                compress: false,\r\n                redirect: 'manual',\r\n                agent,\r\n            });\r\n            const buff = yield fRes.buffer();\r\n            return {\r\n                status: fRes.status,\r\n                headers: fRes.headers.raw(),\r\n                body: buff,\r\n            };\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=request-handler.js.map","map":"{\"version\":3,\"file\":\"request-handler.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/request-handler.ts\"],\"names\":[],\"mappings\":\"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\"}"}
