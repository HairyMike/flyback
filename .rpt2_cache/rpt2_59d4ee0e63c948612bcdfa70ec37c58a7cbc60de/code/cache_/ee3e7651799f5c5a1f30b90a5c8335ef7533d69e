{"code":"import fs from 'fs';\r\nimport path from 'path';\r\nimport mkdirp from 'mkdirp';\r\nimport Tape from './tape';\r\nimport TapeMatcher from './tape-matcher';\r\nimport TapeRenderer from './tape-renderer';\r\nexport default class TapeStore {\r\n    constructor(options) {\r\n        this.path = path.normalize(`${options.tapesPath}/`);\r\n        this.options = options;\r\n        this.tapes = [];\r\n        this.load();\r\n    }\r\n    load() {\r\n        mkdirp.sync(this.path);\r\n        this.loadTapesAtDir(this.path);\r\n        this.options.logger.log(`Loaded ${this.tapes.length} tapes`);\r\n    }\r\n    loadTapesAtDir(directory) {\r\n        const items = fs.readdirSync(directory);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const filename = items[i];\r\n            const fullPath = `${directory}${filename}`;\r\n            const stat = fs.statSync(fullPath);\r\n            if (!stat.isDirectory()) {\r\n                try {\r\n                    const data = fs.readFileSync(fullPath, 'utf8');\r\n                    const raw = JSON.parse(data);\r\n                    const tape = Tape.fromJSON(raw, this.options);\r\n                    tape.path = filename;\r\n                    this.tapes.push(tape);\r\n                }\r\n                catch (e) {\r\n                    this.options.logger.error(`Error reading tape ${fullPath}`);\r\n                    this.options.logger.error(e);\r\n                }\r\n            }\r\n            else {\r\n                this.loadTapesAtDir(`${fullPath}/`);\r\n            }\r\n        }\r\n    }\r\n    find(newTape) {\r\n        const foundTape = this.tapes.find((t) => {\r\n            this.options.logger.debug(`Comparing against tape ${t.path}`);\r\n            return new TapeMatcher(t, this.options).sameAs(newTape);\r\n        });\r\n        if (foundTape) {\r\n            foundTape.used = true;\r\n            this.options.logger.log(`Found matching tape for ${newTape.request.url} at ${foundTape.path}`);\r\n            return foundTape;\r\n        }\r\n        return null;\r\n    }\r\n    save(tape) {\r\n        tape.new = true;\r\n        tape.used = true;\r\n        const tapePath = tape.path;\r\n        let fullFilename;\r\n        if (tapePath) {\r\n            fullFilename = path.join(this.path, tapePath);\r\n        }\r\n        else {\r\n            // If the tape doesn't have a path then it's new\r\n            this.tapes.push(tape);\r\n            fullFilename = this.createTapePath(tape);\r\n            tape.path = path.relative(this.path, fullFilename);\r\n        }\r\n        this.options.logger.log(`Saving request ${tape.request.url} at ${tape.path}`);\r\n        const toSave = new TapeRenderer(tape).render();\r\n        fs.writeFileSync(fullFilename, JSON.stringify(toSave, null, 2));\r\n    }\r\n    currentTapeId() {\r\n        return this.tapes.length;\r\n    }\r\n    hasTapeBeenUsed(tapeName) {\r\n        return this.tapes.some((t) => t.used && t.path === tapeName);\r\n    }\r\n    resetTapeUsage() {\r\n        return this.tapes.forEach((t) => (t.used = false));\r\n    }\r\n    createTapePath(tape) {\r\n        const currentTapeId = this.currentTapeId();\r\n        let tapePath = `unnamed-${currentTapeId}.json`;\r\n        if (this.options.tapeNameGenerator) {\r\n            tapePath = this.options.tapeNameGenerator(tape, currentTapeId);\r\n        }\r\n        let result;\r\n        if (this.options.tapePathGenerator) {\r\n            result = this.options.tapePathGenerator(tape);\r\n        }\r\n        if (!result && this.options.tapesPath) {\r\n            result = path.normalize(path.join(this.options.tapesPath, tapePath));\r\n        }\r\n        if (!result) {\r\n            throw new Error(`Cant create path for tape ${tape.toJSON()}`);\r\n        }\r\n        if (!result.endsWith('.json')) {\r\n            result = `${result}.json`;\r\n        }\r\n        const dir = path.dirname(result);\r\n        mkdirp.sync(dir);\r\n        return result;\r\n    }\r\n    hasPath(pathToCheck) {\r\n        return this.path === path.normalize(`${pathToCheck}/`);\r\n    }\r\n}\r\n//# sourceMappingURL=tape-store.js.map","map":"{\"version\":3,\"file\":\"tape-store.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/tape-store.ts\"],\"names\":[],\"mappings\":\"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\"}"}
